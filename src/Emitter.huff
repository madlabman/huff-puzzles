 /**
 *  EMITTER HUFF EXERCISE
 *
 *  The task is to enable this contract, when the function `value(uint256, uint256)` is called, should
 *  emit an event named `Value(uint256 indexed, uint256)`
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function value(uint256, uint256) payable returns()

#define event Value(uint256 indexed, uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(value) eq VALUE jumpi
    0x00 0x00 revert
VALUE:
    __VALUE()
}

#define macro __VALUE() = takes(0) returns(0) {
    0x04 calldataload           // [a]
    0x24 calldataload           // [b, a]
    0x00 mstore                 // [a]
    __EVENT_HASH(Value)         // [topic0, a]
    0x20 0x00 log2
}

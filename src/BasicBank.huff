/**
 *  BASIC_BANK HUFF EXERCISE
 *
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    dup1 __FUNC_SIG(balanceOf) eq BALANCE jumpi
    __FUNC_SIG(withdraw) eq WITHDRAW jumpi

    caller sload                // [old]
    callvalue add               // [new]
    caller sstore               // []
    stop

WITHDRAW:
    __WITHDRAW()

BALANCE:
    caller sload
    0x00 mstore
    0x20 0x00 return
}

#define macro __WITHDRAW() = takes(0) returns(0) {
    caller sload                         // [balance]
    0x04 calldataload                    // [amount, balance]
    gt FAIL jumpi                        // []

    0x00 0x00 0x00 0x00
    0x04 calldataload                   // [amount]
    caller
    gas
    call
    iszero FAIL jumpi

    caller sload
    0x04 calldataload sub
    caller sstore
    stop

FAIL:
    0x00 0x00 revert
}

// vim: ft=c
